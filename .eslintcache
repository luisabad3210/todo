[{"/Users/luisabad/Desktop/todo/src/index.js":"1","/Users/luisabad/Desktop/todo/src/App.js":"2","/Users/luisabad/Desktop/todo/src/reportWebVitals.js":"3","/Users/luisabad/Desktop/todo/src/components/form.js":"4","/Users/luisabad/Desktop/todo/src/components/todoList.js":"5","/Users/luisabad/Desktop/todo/src/components/todo.js":"6"},{"size":500,"mtime":1611242402899,"results":"7","hashOfConfig":"8"},{"size":1540,"mtime":1611366727887,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1611242402901,"results":"10","hashOfConfig":"8"},{"size":898,"mtime":1611364271734,"results":"11","hashOfConfig":"8"},{"size":377,"mtime":1611267647850,"results":"12","hashOfConfig":"8"},{"size":935,"mtime":1611354029444,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"12tc8pe",{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"/Users/luisabad/Desktop/todo/src/index.js",[],["29","30"],"/Users/luisabad/Desktop/todo/src/App.js",["31","32","33","34"],"/Users/luisabad/Desktop/todo/src/reportWebVitals.js",[],"/Users/luisabad/Desktop/todo/src/components/form.js",["35"],"import React from 'react';\nimport Add from './images/add.png'\n\nconst Form = ({ setInputText, todos, setTodos, inputText }) => {\n\n    const inputTextHandler = (e) => {\n        let x = e.target.value;\n        setInputText(x)\n    };\n\n    const submitTodoHandler = (e) => {\n        e.preventDefault()\n        \n        if (inputText !== \"\") {\n            setTodos([\n                ...todos, {text: inputText, completed: false, id: Math.random() * 1000}\n            ])\n            setInputText(\"\");\n        }\n    };\n\n    return (\n        <form>\n            <input className='input' value={inputText} onChange={inputTextHandler} placeholder='add a task'/>\n            <button className={inputText === \"\" ? 'inputBtn inputBtnNoneActive' : 'inputBtn inputBtnActive'} onClick={submitTodoHandler} type='submit'><img src={Add} width='20px' height='20px'/></button>\n        </form>\n    )\n}\n\nexport default Form","/Users/luisabad/Desktop/todo/src/components/todoList.js",[],"/Users/luisabad/Desktop/todo/src/components/todo.js",["36","37"],"import React from 'react';\nimport Trash from './images/trash.png'\nimport Done from './images/done.png'\n\n\nconst Todo = ({ text, todo, todos, setTodos }) => {\n\n    const deletleHandler = () => {\n        setTodos(todos.filter(i => i.id !== todo.id));\n    }\n\n    const completeHandler = () => {\n        setTodos(todos.map(item => {\n            if (item.id === todo.id) {\n                return {\n                    ...item, completed: !item.completed\n                };\n            }\n            return item;\n        }))\n    }\n    return (\n        <div className='item'>\n            {text}\n            <div className='todoBtn'>\n                <button  className='done' onClick={completeHandler} ><img src={Done} width='15px' height='15px'/></button>\n                <button className ='trash' onClick={deletleHandler} ><img src={Trash} width='15px' height='15px'/></button>\n            </div>\n        </div>\n    )\n}\n\nexport default Todo;",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":24,"column":26,"nodeType":"44","messageId":"45","endLine":24,"endColumn":27},{"ruleId":"42","severity":1,"message":"43","line":26,"column":26,"nodeType":"44","messageId":"45","endLine":26,"endColumn":27},{"ruleId":"46","severity":1,"message":"47","line":46,"column":73,"nodeType":"48","endLine":46,"endColumn":120},{"ruleId":"46","severity":1,"message":"47","line":46,"column":123,"nodeType":"48","endLine":46,"endColumn":166},{"ruleId":"46","severity":1,"message":"47","line":25,"column":152,"nodeType":"48","endLine":25,"endColumn":195},{"ruleId":"46","severity":1,"message":"47","line":26,"column":70,"nodeType":"48","endLine":26,"endColumn":114},{"ruleId":"46","severity":1,"message":"47","line":27,"column":70,"nodeType":"48","endLine":27,"endColumn":115},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]